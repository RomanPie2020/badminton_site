services:
  postgres:
    # image: postgres:14.16-alpine3.20
    image: postgres:latest
    container_name: badminton_db
    # env_file:
    #   - ./server/.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - '5432:5432'

    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: badminton_pgadmin

  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: romankaras2004@gmail.com
  #     PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
  #   ports:
  #     - '5050:80'
  #   volumes:
  #     - ./pgadmin-data:/var/lib/pgadmin
  #   depends_on:
  #     - postgres
  #   networks:
  #     - app-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: badminton_backend

    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - MAILER_USER=${MAILER_USER}
      - MAILER_PASSWORD=${MAILER_PASSWORD}

    ports:
      - '3000:3000'
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - app-network
    command: npm run dev

  # frontend:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   container_name: badminton_frontend
  #   ports:
  #     - '5173:5173'
  #   volumes:
  #     - ./client:/app
  #     - /app/node_modules
  #   networks:
  #     - app-network
  #   command: npm run dev

networks:
  app-network:
    driver: bridge
volumes:
  postgres_data:
#   frontend:
#     container_name: frontend
#     build:
#       context: ./client
#       dockerfile: Dockerfile
#     restart: always
#     depends_on:
#       # - mysql
#       # - backend
#     ports:
#       - '5173:5173'
#     command: bash -c "npm run dev -- --host 0.0.0.0"
#     volumes:
#       - ./client:/app
#     networks:
#       - net

